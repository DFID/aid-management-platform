@model  AMP.ViewModels.ComponentVM
@{
    ViewBag.Title = "CreateComponent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.ProjectID, new { id = "ProjectID" })
<div class="page-container secondary">
    <h1>Create a new component</h1>
    <p class="form-hint">You can use this screen to create a new component for project @Model.ProjectID.</p>
    @Html.EditorFor(model => model, "ComponentDetails")
    <div class="grid-row">
        <div class="column-full">
            <div id="validation-errors">
                @Html.ValidationSummary()
            </div>
        </div>
    </div>
    <button id="CreateBtn" class="button" value="Save" type="submit">
        Create
    </button>
    <button id="CloseBtn" class="bluelightnight" type="button" onclick="Cancel()">
        Cancel
    </button>
    <br/>
    <br />
    <div class="PushDown">
        <div id="SaveMessage" style="display: none">Save Successful</div>
        <input type="hidden" id="SaveSuccess" value="@(ViewBag.Success.ToString())"/>
    </div>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/typeahead")
    @Scripts.Render("~/bundles/datetimepicker")
    <script type="text/javascript">

        // alert('Start of JavaScript');

        /*Bloodhound typeahead for Budget Centre*/
        var budcents = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('BudgetCentreDescription'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            limit: 20,
            prefetch: '../BudgetCentreLookup'

        });

        // kicks off the loading/processing of `local` and `prefetch`
        budcents.initialize();

        // passing in `null` for the `options` arguments will result in the default
        // options being used
        $('#BudCen .typeahead').typeahead({ highlight: true }, {
            name: 'budcents',
            displayKey: 'BudgetCentreDescription',
            // `ttAdapter` wraps the suggestion engine in an adapter that
            // is compatible with the typeahead jQuery plugin
            source: budcents.ttAdapter()
        }).bind('typeahead:selected', function(obj, datum) {
            changeBudgetTypeahead(obj, datum);
        }).bind('typeahead:autocompleted', function(obj, datum) {
            changeBudgetTypeahead(obj, datum)
        });

        function changeBudgetTypeahead(obj, datum) {
            $('input#BudgetCentreID').val(datum.BudgetCentreID);

          //  alert(datum.BudgetCentreID);

            if (datum.BudgetCentreID.substr(0, 2) == "A0" || datum.BudgetCentreID.substr(0, 2) == "C0" || datum.BudgetCentreID.substr(0, 2) == "AP") {
              $('#AdminGroup').toggle();
            }

            //$('#_lblBudCenIDValue').text(datum.BudgetCentreID);
        };

        /*End Bloodhound typeahead for Budget Centre*/

        function Cancel() {

            window.location.href = "@Url.Action("Components", "Project", new {id = @Model.ProjectID})";
        }


        $('#ComponentDate_StartDate_Day').prop('disabled', true);
        $('#ComponentDate_StartDate_Month').prop('disabled', true);
        $('#ComponentDate_StartDate_Year').prop('disabled', true);

        $('#ComponentDate_EndDate_Day').prop('disabled', true);
        $('#ComponentDate_EndDate_Month').prop('disabled', true);
        $('#ComponentDate_EndDate_Year').prop('disabled', true);

        //$('#BudgetCentreBox').val('Type to search');


        var staffList = [
            { "EmpNo": "111111", "DisplayName": "A Inputter", "LOGON": "A-INPUTTER" },
            { "EmpNo": "222222", "DisplayName": "A SRO", "LOGON": "A-SRO" },
            { "EmpNo": "333333", "DisplayName": "An Adviser", "LOGON": "A-Adviser" },
            { "EmpNo": "444444", "DisplayName": "A TeamMember", "LOGON": "A-TeamMemver" },
            { "EmpNo": "555555", "DisplayName": "A OfficeHead", "LOGON": "A-OfficeHead" }
        ];

        /*Bloodhound typeahead for Staff*/

        var staff = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('DisplayName'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            local: staffList
        });

        // kicks off the loading/processing of `local` and `prefetch`
        staff.initialize();

        // passing in `null` for the `options` arguments will result in the default
        // options being used
        $('#AdminSection .typeahead').typeahead({ highlight: true }, {
            name: 'staff',
            displayKey: 'DisplayName',
            // `ttAdapter` wraps the suggestion engine in an adapter that
            // is compatible with the typeahead jQuery plugin
            source: staff.ttAdapter()
        }).bind('typeahead:selected', function(obj, datum) {
            changeTypeahead(obj, datum);
        }).bind('typeahead:autocompleted', function(obj, datum) {
            changeTypeahead(obj, datum);
        });

        function changeTypeahead(obj, datum) {
            //$('input#DisplayName').val(datum.DisplayName);
            //alert(datum.EmpNo);
            $('input#AdminApprover').val(datum.EmpNo);

        };
        /*End Bloodhound typeahead for Staff*/

        if ($('input#BudgetCentreID').val().substr(0, 2) == "A0" || $('input#BudgetCentreID').val().substr(0, 2) == "C0" || $('input#BudgetCentreID').val().substr(0, 2) == "AP") {
            $('#AdminGroup').toggle();
        }
    </script>
}
