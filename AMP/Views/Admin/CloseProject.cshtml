@model AMP.Models.ProjectMaster
@{
    Layout = null;
}
@{
    ViewBag.Title = "CloseProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="page-container">
        <h4>Close Project</h4>
        <p class="form-hint">Search for Project Number or Text contained in the title of a project</p>
        <div style="float: left">
            <input id="project-search" type="text" name="Title" placeholder="Search for a Project" style="width: 500px; height: 25px" />
            @Html.ValidationMessageFor(model => model.ProjectID, null, new { id = "ErrorMessage" })
            @Html.HiddenFor(model => model.ProjectID)
            </div>
            <div style="float: left">
                <button id="CloseProject" name="SubmitButton" class="button" type="submit" value="Close Project">Close Project</button>
            </div>
        <br />
            <br />
        <input style="display: none" id="SaveSuccess" name="SaveSuccess" value="@(ViewBag.Success.ToString())" />
        <div id="SaveMessage" style="display: none">Save Successful</div>
            @Html.ActionLink("Back to List", "Index")
        </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/typeahead")
    @Scripts.Render("~/bundles/datetimepicker")
    <script type="text/javascript">


        var projects = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Title'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            limit: 20,
            prefetch: {
                //url: './ProjectLookUp',
                url: "@Url.Action("ProjectLookUp", "Project")",
                ttl: 36000000 //10 Hour (in milliseconds)

            }
        });

        // kicks off the loading/processing of `local` and `prefetch`
        projects.initialize();

        // passing in `null` for the `options` arguments will result in the default
        // options being used
        $('#project-search').typeahead({ highlight: true }, {
            name: 'projects',
            displayKey: 'Title',
            // `ttAdapter` wraps the suggestion engine in an adapter that
            // is compatible with the typeahead jQuery plugin
            source: projects.ttAdapter(),
            limit: 20
        }).bind('typeahead:selected', function (obj, datum) {
            changeTypeahead(obj, datum);
        }).bind('typeahead:autocompleted', function (obj, datum) {
            changeTypeahead(obj, datum)
        });

        function changeTypeahead(obj, datum) {
            $('input#ProjectID').val(datum.ProjectID);
        };

    </script>
}