@model AMP.Models.ReviewDocument
@{
    ViewBag.Title = "EditReviewDocument";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="page-container">
        <div class="grid-row">
            <div class="form-horizontal">
                <h2>EditReviewDocument</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ReviewDocumentsID)
                @Html.HiddenFor(model => model.ProjectID)
                @Html.HiddenFor(model => model.ReviewID)

                <div class="form-group">
                    @Html.LabelFor(model => model.DocumentID, "Document ID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DocumentID, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { id = "Description", @class = "form-control", @rows = 2 })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DocSource, "Document Source (Quest or Vault)", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            List<SelectListItem> listItemsSource = new List<SelectListItem>();
                            listItemsSource.Add(new SelectListItem
                            {
                                Text = "Quest",
                                Value = "Q"
                            });
                            listItemsSource.Add(new SelectListItem
                            {
                                Text = "Vault",
                                Value = "V"
                            });

                            @Html.DropDownListFor(model => model.DocSource, listItemsSource, "-- Select option --", new { @class = "form-control", id = "Status" })
                            @Html.ValidationMessageFor(model => model.DocSource, "", new { @class = "text-danger" })

                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastUpdate, "Last Update", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastUpdate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <input type="hidden" id="SaveSuccess" value="@(ViewBag.Success.ToString())" />
                <div id="SaveMessage" style="display: none">Save Successful</div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>

            </div>
        </div>
    </div>
}
