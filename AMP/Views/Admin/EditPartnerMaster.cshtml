@model AMP.Models.PartnerMaster
@{
    ViewBag.Title = "EditPartnerMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="page-container">
    <div class="grid-row">
        <div class="form-horizontal">
            <h2>EditPartnerMaster</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.PartnerID)
            @Html.HiddenFor(model => model.LastUpdated)
            @Html.HiddenFor(model => model.UserID)

            <div class="form-group">
                @Html.LabelFor(model => model.ID, "ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PartnerID, "Partner ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.PartnerID, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PartnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.PartnerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PartnerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        List<SelectListItem> listItemsStatus = new List<SelectListItem>();
                        listItemsStatus.Add(new SelectListItem
                        {
                            Text = "Active",
                            Value = "A"
                        });
                        listItemsStatus.Add(new SelectListItem
                        {
                            Text = "Closed/Deleted",
                            Value = "C"
                        });

                        @Html.DropDownListFor(model => model.Status, listItemsStatus, "-- Select option --", new { @class = "form-control", id = "Status" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

                    }
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.LastUpdated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.LastUpdated, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <input type="hidden" id="SaveSuccess" value="@(ViewBag.Success.ToString())" />
            <div id="SaveMessage" style="display: none">Save Successful</div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
</div>
}
