@model AMP.Models.ComponentMaster

@{
    ViewBag.Title = "Edit ComponentMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
            <h2>Edit ComponentMaster</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ComponentID)
    <div class="grid-row">
        <div class="column-half">

            <div class="form-group">
                @*@Html.LabelFor(model => model.ComponentDescription)*@
                <p class="form-hint">Component Description</p>
                @Html.TextAreaFor(model => model.ComponentDescription, new { id = "ComponentDescription", @class = "form-control", @rows = 1})
                @Html.ValidationMessageFor(model => model.ComponentDescription, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                <p class="form-hint">Budget Centre ID</p>
                    @Html.EditorFor(model => model.BudgetCentreID, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.BudgetCentreID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <p class="form-hint">Project ID</p>
             
                    @Html.EditorFor(model => model.ProjectID, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                
            </div>

            <div class="form-group">
                <p class="form-hint">Admin Approver</p>
                
                    @Html.EditorFor(model => model.AdminApprover, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdminApprover, "", new { @class = "text-danger" })
                
            </div>

            <div class="form-group">
                <p class="form-hint">Funding Mechanism</p>
                @Html.EditorFor(model => model.FundingMechanism, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FundingMechanism, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                <p class="form-hint">Operational Status</p>
                @Html.EditorFor(model => model.OperationalStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperationalStatus, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="column-half">

            <div class="form-group">
                <p class="form-hint">Benefitting Country</p>
                @Html.EditorFor(model => model.BenefittingCountry, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BenefittingCountry, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                <p class="form-hint">Funding Arrangement</p>
                @Html.EditorFor(model => model.FundingArrangementValue, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FundingArrangementValue, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                <p class="form-hint">Partner Organisation</p>
                @Html.EditorFor(model => model.PartnerOrganisationValue, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PartnerOrganisationValue, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                <p class="form-hint">Last Updated</p>
                @Html.EditorFor(model => model.LastUpdate, new {htmlAttributes = new {@class = "form-control", @readonly = true}})
                @Html.ValidationMessageFor(model => model.LastUpdate, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                <p class="form-hint">User ID</p>
                @Html.EditorFor(model => model.UserID, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UserID, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                <p class="form-hint">Approved</p>
                @Html.EditorFor(model => model.Approved, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Approved, "", new {@class = "text-danger"})

            </div>
            <input type="hidden" id="SaveSuccess" value="@(ViewBag.Success.ToString())"/>
            <div id="SaveMessage" style="display: none">Save Successful</div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="button submit"/>
                </div>
            </div>
        </div>
    </div>


    }

    
</div>